#!/usr/bin/env rust-script
//!
//!
//! ```cargo
//! [dependencies]
//!
//! ```

//use std::env;
use std::fs::File;
use std::io::{BufRead, BufReader};

fn main() {
  let input_file = std::env::args().nth(1).expect("Input file not specified");
  let file = File::open(input_file).unwrap();
  let reader = BufReader::new(file);

  let mut horizontal = 0;
  let mut depth      = 0;
  let mut aim        = 0;

  for (index, line) in reader.lines().enumerate() {
    let line = line.unwrap();
    let mut split = line.split_whitespace();
    let direction = split.next().expect("String");
    let units = split.next().expect("Integer").parse::<i32>().unwrap();

    match direction {
      "forward" => { horizontal += units;
                     depth      += units * aim },
      "down"    => { aim        += units },
      "up"      => { aim        -= units },
      _         => println!("Input Error: {}:{}", index, line),
    }
  }

  let answer = horizontal * depth;
  println!("{}", answer);
}
